% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zTest.R
\name{designSafeZ}
\alias{designSafeZ}
\title{Designs a Safe Z Experiment to Test Means with Population Standard Error Assumed to be Known}
\usage{
designSafeZ(
  meanDiffMin = NULL,
  alpha = 0.05,
  beta = 0.2,
  nPlan = NULL,
  alternative = c("two.sided", "greater", "less"),
  h0 = 0,
  sigma = 1,
  kappa = sigma,
  tol = 1e-05,
  highN = 8e+09,
  testType = c("oneSampleZ", "pairedSampleZ", "twoSampleZ"),
  ratio = 1,
  ...
)
}
\arguments{
\item{meanDiffMin}{numeric that defines the minimal relevant mean difference, the smallest population mean
that we would like to detect.}

\item{alpha}{numeric in (0, 1) that specifies the tolerable type I error control --independent on n-- that the
designed test has to adhere to. Note that it also defines the rejection rule S10 > 1/alpha.}

\item{beta}{numeric in (0, 1) that specifies the tolerable type II error control necessary to calculate both "n"
and "deltaS". Note that 1-beta defines the power.}

\item{nPlan}{optional numeric vector of length at most 2. When provided, it is used to find the safe test
defining parameter phiS.}

\item{alternative}{a character string specifying the alternative hypothesis must be one of "two.sided" (default),
"greater" or "less".}

\item{h0}{a number indicating the hypothesised true value of the mean under the null.}

\item{sigma}{numeric > 0 representing the assumed population standard deviation used for the test.}

\item{kappa}{the true population standard deviation. Default kappa=sigma.}

\item{tol}{a number that defines the stepsizes between the lowParam and highParam.}

\item{highN}{integer that stops the search process if the lower bound for the candidate nPlan exceeds this
number. Default highN is set 8e9 to correspond to the current population of the earth.}

\item{testType}{either one of "oneSampleZ", "pairedSampleZ", "twoSampleZ".}

\item{ratio}{numeric representing n2/n1. If is.null(n2) then ratio=1.}

\item{...}{further arguments to be passed to or from methods.}
}
\value{
Returns a safeDesign object that includes:

\describe{
  \item{nPlan}{the sample size(s) to plan for. Computed based on beta and esMin, or provided by the user if known.}
  \item{parameter}{the safe test defining parameter. Here phiS.}
  \item{esMin}{the minimally clinically relevant effect size provided by the user.}
  \item{alpha}{the tolerable type I error provided by the user.}
  \item{beta}{the tolerable type II error specified by the user.}
  \item{alternative}{any of "two.sided", "greater", "less" provided by the user.}
  \item{testType}{any of "oneSampleZ", "pairedSampleZ", "twoSampleZ" effectively provided by the user.}
  \item{paired}{logical, \code{TRUE} if "pairedSampleZ", \code{FALSE} otherwise.}
  \item{h0}{the specified hypothesised value of the mean or mean difference depending on whether it was a one-sample
  or a two-sample test.}
  \item{sigma}{the assumed population standard deviation used for the test provided by the user.}
  \item{kappa}{the true population standard deviation, typically, sigma=kappa.}
  \item{ratio}{default is 1, only used when testType=="twoSampleZ" and defines n2=ratio*n1.}
  \item{tol}{the step size between parameter values in the candidate space.}
  \item{pilot}{logical, specifying whether it's a pilot design.}
  \item{call}{the expression with which this function is called.}
}
}
\description{
A designed experiment requires (1) a sample size nPlan to plan for, and (2) the parameter of the safe test, i.e.,
phiS. If nPlan is provided, then only the safe test defining parameter phiS needs to determined. That resulting phiS
leads to an (approximately) most powerful safe test. Typically, nPlan is unknown and the user has to specify
(i) a tolerable type II error beta, and (b) a clinically relevant minimal population mean difference meanDiffMin.
The procedure finds the smallest nPlan for which meanDiffMin is found with power of at least 1 - beta.
}
\examples{
designObj <- designSafeZ(meanDiffMin=0.8, alpha=0.08, beta=0.01, alternative="greater")
}
