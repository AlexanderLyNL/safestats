% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logRankTest.R
\name{safeLogrankTest}
\alias{safeLogrankTest}
\alias{safeLogrankTestSumStat}
\title{Safe Logrank Test}
\usage{
safeLogrankTest(
  formula,
  designObj = NULL,
  h0 = 1,
  alphaCS = 0.05,
  data = NULL,
  survTime = NULL,
  group = NULL,
  pilot = FALSE,
  alpha = NULL,
  alternative = NULL,
  exact = FALSE,
  ...
)

safeLogrankTestSumStat(
  z,
  nEvents,
  ratio = 1,
  designObj,
  alphaCS = 0.05,
  alternative = c("two.sided", "greater", "less")
)
}
\arguments{
\item{formula}{a formula expression as for other survival models, of the form Surv(time, status) ~ groupingVariable,
see \code{\link[survival]{Surv}} for more details.}

\item{designObj}{a safe logrank design obtained from \code{\link{designSafeLogrank}}.}

\item{h0}{a number indicating the hypothesised true value of the hazard ratio under the null. Default set to 1}

\item{alphaCS}{numeric is the alpha level of the confidence sequence. Default alphaCS=0.05}

\item{data}{an optional data frame in which to interpret the variables occurring in survTime and group}

\item{survTime}{an optional survival time object of class "Surv" created with \code{\link[survival]{Surv}}, or
a name of a column in the data set of class "Surv". Does not need specifying if a formula is provided, therefore
set to \code{NULL} by default.}

\item{group}{an optional factor, a grouping variable. Currently, only two levels allowed. Does not need specifying
if a formula is provided, therefore set to \code{NULL} by default.}

\item{pilot}{a logical indicating whether a pilot study is run. If \code{TRUE}, it is assumed that the number of
samples is exactly as planned.}

\item{alpha}{numeric > 0 only used if pilot equals \code{TRUE}. If pilot equals \code{FALSE}, then the alpha of
the design object is used instead in constructing the decision rule S > 1/alpha.}

\item{alternative}{a character string only used if pilot equals \code{TRUE}. If pilot equals \code{FALSE}, then the
alternative specified by the design object is used instead.}

\item{exact}{a logical indicating whether the exact safe logrank test needs to be performed based on
the hypergeometric likelihood}

\item{...}{further arguments to be passed to or from methods.}

\item{z}{numeric representing the observed z statistic.}

\item{nEvents}{numeric > 0, observed number of events.}
}
\value{
Returns an object of class "safeTest". An object of class "safeTest" is a list containing at least the
following components:

\describe{
  \item{statistic}{the value of the z-statistic.}
  \item{nEvents}{The number of observed events.}
  \item{eValue}{the s-value of the safe test.}
  \item{confSeq}{An anytime-valid confidence sequence.}
  \item{estimate}{To be implemented: An estimate of the hazard ratio.}
  \item{h0}{the specified hypothesised value of hazard ratio.}
  \item{testType}{"logrank".}
  \item{dataName}{a character string giving the name(s) of the data.}
  \item{designObj}{an object of class "safeDesign" obtained from \code{\link{designSafeLogrank}}.}
  \item{logrankObj}{an object obtained from \code{\link[coin]{logrank_test}}.}
  \item{call}{the expression with which this function is called.}
}


}
\description{
A safe test to test whether there is a difference between two survival curves. This function
builds on the Mantel-Cox version of the logrank test computed with \code{\link[survival]{survdiff}}
and adds a sign to the statistic based on the output of \code{\link[coin]{logrank_test}}.
}
\section{Functions}{
\itemize{
\item \code{safeLogrankTestSumStat}: Safe Logrank Test based on Summary Statistic Z
}}

\examples{
# Example taken from survival::survdiff
designObj <- designSafeLogrank(hrMin=1/2)

ovData <- survival::ovarian
ovData$survTime <- survival::Surv(ovData$futime, ovData$fustat)

safeLogrankTest(formula=survTime~ rx, data=ovData, designObj=designObj)

safeLogrankTest(survTime=survTime, group=rx, data=ovData, designObj=designObj)

# Examples taken from coin::logrank_test
## Example data (Callaert, 2003, Tab. 1)
#'
callaert <- data.frame(
  time = c(1, 1, 5, 6, 6, 6, 6, 2, 2, 2, 3, 4, 4, 5, 5),
  group = factor(rep(0:1, c(7, 8)))
)

designObj <- designSafeLogrank(hrMin=1/2, beta=0.2)

safeLogrankTest(survival::Surv(callaert$time)~callaert$group,
                designObj = designObj)

safeLogrankTest(survTime=survival::Surv(callaert$time),
                group=callaert$group, designObj = designObj)
}
